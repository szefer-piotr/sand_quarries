as.data.frame(it1$contrasts)
rarespdf <- as.data.frame(it1$emmeans)
newdat <- expand.grid(fStage = c("Early",
"Mid",
"Late"),
lifeh = c("Herbivores",
"Kleptoparasites",
"Predators"
))
newdata.pred = predict(glm1, type = "response",
newdata = newdat,se.fit = T,
interval = "confidence")
newdata.pred0 = predict(glm0, type = "response",
newdata = newdat,se.fit = T,
interval = "confidence")
newdata.pred
table(raredf$lifeh, raredf$fStage)
plotdat <- data.frame(Stage = newdat$fStage,
Group = newdat$lifeh,
Proportion = newdata.pred$fit,
N = as.vector(t(table(raredf$lifeh, raredf$fStage))),
SE = newdata.pred$se.fit,
CLR = rep(colvec[3:5], each=3),
sig = ltrs)
#Lower limit = p - (z) (Estimated Ïƒp) - 0.5/N
plotdat$ucl <- plotdat$Proportion + qnorm(0.975)*plotdat$SE - 0.5/plotdat$N
plotdat$lcl <- plotdat$Proportion - qnorm(0.975)*plotdat$SE - 0.5/plotdat$N
library(dplyr)
plotdat$Group <- recode(plotdat$Group, Kleptoparasites = "Parasitic species")
p<- ggplot(plotdat, aes(x=Stage, y=Proportion,
group = Group,
color = Group,
label = sig)) +
geom_point(size=3)+
geom_errorbar(aes(ymin=lcl,
ymax=ucl), width=.2,lwd=1,
position=position_dodge(0.05))+
stat_summary(fun=mean, geom="text",
col = rgb(10,10,10,180,maxColorValue = 255),
hjust = 1.7)+
facet_wrap(~Group)+
ylim(0, 0.21)
pdf("revision_1/figures/Fig6.pdf", width = 10, height = 4, onefile = FALSE)
p+ theme_bw()+ theme(legend.position = "none")+
scale_color_manual(values=c(alpha(colvec[1],1),
alpha(colvec[2],1),
alpha(colvec[3],1)))
dev.off()
# GRADIENT COMPONENT----
# condition <- dset$diff == "Balanced"
# condition <- dset$diff == "Gradient"
# condition <- (dset$diff == "Balanced" & dset$comparison != "I vs III")
condition <- (dset$diff == "Gradient" & dset$comparison != "I vs III")
dset$reff <- paste(dset$initSite,
gsub(" ","",substr(dset$comparison,1,2)),
sep="_")
null_gra_rand <- glmmTMB(value ~ 1 + (1|reff),
data = dset[condition,],
family= beta_family(link = "logit"))
gra_rand <- glmmTMB(value ~ comparison*group + (1|reff),
data = dset[condition,],
family= beta_family(link = "logit"))
summary(gra_rand)
gra_rand_test <- emmeans(gra_rand, pairwise ~ comparison | group)
summary(gra_rand_test)
grapred <- ggpredict(gra_rand, terms = c("group", "comparison"),
type = "re")
cfs <- as.data.frame(grapred)
names(cfs) <- c("group",
"value",
"SE",
"lcl",
"ucl",
"comparison")
bgcb <- ggplot(dset[condition,], aes(comparison, value)) +
geom_jitter(width = 0.1,aes(color=group), alpha = 0.2)+
geom_line(aes(group = 1, color = group), lty = c(2,2,2,
2,2,2), data = cfs)+
geom_errorbar(aes(ymin = lcl, ymax = ucl, color = group),
data = cfs, width = 0, lwd=1) +
geom_point(data = cfs, size = 3, aes(color = group))+
facet_wrap(~group)+
scale_color_manual(values=c(alpha(colvec[1],1),
alpha(colvec[2],1),
alpha(colvec[3],1)))+
# ggtitle("Balanced component")
ylab("")+xlab("")+
ggtitle("Gradient component")
# pdf("fig3c_gradient.pdf", width=12, height=4)
jpeg("fig3c_gradient.jpg", width = 1200, height = 400, res = 150)
dev.off()
pdf("revision_1/figures/FigA3.pdf", width=12, height=4,
onefile = FALSE)
bgcb  + theme_bw()+theme(legend.position = "none")
dev.off()
gset$b_group <- recode(gset$b_group, Kleptoparasites = "Parasitic species")
cfs$b_group <- recode(cfs$b_group, Kleptoparasites = "Parasitic species")
bgcb <- ggplot(dset[condition,], aes(comparison, value)) +
geom_jitter(width = 0.1,aes(color=group), alpha = 0.2)+
geom_line(aes(group = 1, color = group), lty = c(2,2,2,
2,2,2), data = cfs)+
geom_errorbar(aes(ymin = lcl, ymax = ucl, color = group),
data = cfs, width = 0, lwd=1) +
geom_point(data = cfs, size = 3, aes(color = group))+
facet_wrap(~group)+
scale_color_manual(values=c(alpha(colvec[1],1),
alpha(colvec[2],1),
alpha(colvec[3],1)))+
# ggtitle("Balanced component")
ylab("")+xlab("")+
ggtitle("Gradient component")
bgcb  + theme_bw()+theme(legend.position = "none")
dset[condition,]
dset[condition,]$group <- recode(dset[condition,]$group,
Kleptoparasites = "Parasitic species")
dset[condition,]$group
?recode
library(dplyr)
dset[condition,]$group <- recode(dset[condition,]$group,
Kleptoparasites = "Parasitic species")
dset[condition,]$group
# Beta-diveristy partitioning ----
# Load data ----
source("data/data_processing.R")
# packages
library(betapart)
require(vegan)
library(ggplot2)
library(codyn)
library(emmeans)
library(multcomp)
library(brms)
library(betareg)
library(glmmTMB)
library(lmtest)
library(ggeffects)
library(dplyr)
# Convert matrix into incidence matrix (0-1)
# Make pairs and calcualte beta.pair.abund and beta.pair
api1 <- decostand(api[stages$succession == 1, ], "hel")
api2 <- decostand(api[stages$succession == 2, ], "hel")
api3 <- decostand(api[stages$succession == 3, ], "hel")
sph1 <- decostand(sph[stages$succession == 1, ], "hel")
sph2 <- decostand(sph[stages$succession == 2, ], "hel")
sph3 <- decostand(sph[stages$succession == 3, ], "hel")
chr1 <- decostand(chr[stages$succession == 1, ], "hel")
chr2 <- decostand(chr[stages$succession == 2, ], "hel")
chr3 <- decostand(chr[stages$succession == 3, ], "hel")
randompairs <- function(reps, ind1, ind2){
chain1 <- sample(1:ind1, reps, replace = TRUE)
chain2 <- sample(1:ind2, reps, replace = TRUE)
return(data.frame(chain1,chain2))
}
# Returns indices of unique site combination
get_indices <- function(mat1, mat2){
mat <- matrix(1, nrow = dim(mat1)[1], ncol=dim(mat2)[1])
mat <- lower.tri(mat)
return(which(mat, arr.ind = T))
}
# mat <- matrix(1, nrow = dim(api2)[1], ncol=dim(api3)[1])
# which(mat==1, arr.ind = T)
get_indices2 <- function(mat1, mat2){
# Because I am comparing two different stages of succession, any comparison of sites will be valid, (e.g. even 1 vs 1) because these are from different successional stages.
mat <- matrix(1, nrow = dim(mat1)[1], ncol=dim(mat2)[1])
return(which(mat==1, arr.ind = T))
}
# Main function
compute_pairs <- function(api1, api2,
...){
# Get only unique set of pairs
indices <- get_indices2(api1,api2)
result <- data.frame()
for(pair in 1:dim(indices)[1]){
bpa <- beta.pair.abund(rbind(api1[indices[pair,1],],
api2[indices[pair,2],]))
result <- rbind(result,
c(bpa$beta.bray.bal,
bpa$beta.bray.gra,
bpa$beta.bray,
indices[pair,1]))
}
colnames(result) <- c("Balanced", "Gradient", "Bray", "InitSite")
return(result)
}
a12 <- compute_pairs(api1,api2)
a13 <- compute_pairs(api1,api3)
a23 <- compute_pairs(api2,api3)
s12 <- compute_pairs(sph1, sph2)
s13 <- compute_pairs(sph1, sph3)
s23 <- compute_pairs(sph2, sph3)
c12 <- compute_pairs(chr1, chr2)
c13 <- compute_pairs(chr1, chr3)
c23 <- compute_pairs(chr2, chr3)
dset <- data.frame(value = c(a12$Balanced,
a13$Balanced,
a23$Balanced,
a12$Gradient,
a13$Gradient,
a23$Gradient,
s12$Balanced,
s13$Balanced,
s23$Balanced,
s12$Gradient,
s13$Gradient,
s23$Gradient,
c12$Balanced,
c13$Balanced,
c23$Balanced,
c12$Gradient,
c13$Gradient,
c23$Gradient),
initSite = c(a12$InitSite,
a13$InitSite,
a23$InitSite,
a12$InitSite,
a13$InitSite,
a23$InitSite,
s12$InitSite,
s13$InitSite,
s23$InitSite,
s12$InitSite,
s13$InitSite,
s23$InitSite,
c12$InitSite,
c13$InitSite,
c23$InitSite,
c12$InitSite,
c13$InitSite,
c23$InitSite),
type = rep(c("Balanced I  vs II", "Balanced I vs III",
"Balanced II vs III",
"Gradient I vs II", "Gradient I vs III",
"Gradient II vs III",
"Balanced I  vs II", "Balanced I vs III",
"Balanced II vs III",
"Gradient I vs II", "Gradient I vs III",
"Gradient II vs III",
"Balanced I  vs II", "Balanced I vs III",
"Balanced II vs III",
"Gradient I vs II", "Gradient I vs III",
"Gradient II vs III"),
c(dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1])),
comparison = rep(c("I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III"),
c(dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1])),
group = rep(c("Herbivores", "Predators", "Kleptoparasites"),
c(2*dim(a12)[1]+2*dim(a13)[1]+2*dim(a23)[1],
2*dim(s12)[1]+2*dim(s13)[1]+2*dim(s23)[1],
2*dim(c12)[1]+2*dim(c13)[1]+2*dim(c23)[1])))
dset$diff <- substr(dset$type,1,8)
# TESTS ----
# logit <-function(x){log(x/(1-x))}
# I am making here an assumption that no comparison can be compeletly dissimilar 1 or similar 0
dset[dset$value == 0, ]$value <- 0.001
dset[dset$value == 1, ]$value <- 0.999
# lk <- logit(dset[dset$group == "Kleptoparasites", ]$value)
# lp <- logit(dset[dset$group == "Predators", ]$value)
# lh <- logit(dset[dset$group == "Herbivores", ]$value)
# # Logit transformation didn't do a good job
# qqnorm(lk)
# qqline(lk)
# qqnorm(lp)
# qqline(lp)
# qqnorm(lh)
# qqline(lh)
# Make an interaction term for pairtwise comparisons
dset$fInt<- paste(substr(dset$type, 1,1),
gsub(" ", "", dset$comparison),
substr(dset$group, 1, 1),
sep="")
# Comparison of II-nd and III-rd stage should always be lower
# see what i can get if I only analyze IvsII and IvsIII.
# Use beta regression for pairwise comparisons
# Balanced component comparison
# Data for genaral Bray-Curtis index comparison ----
bs1 <- dset[dset$diff == "Balanced", c("value","initSite",
"comparison",
"group",
"diff","fInt")]
gs2 <- dset[dset$diff == "Gradient", c("value","initSite",
"comparison",
"group",
"diff", "fInt")]
names(bs1) <- paste("b", names(bs1), sep="_")
names(gs2) <- paste("g", names(gs2), sep="_")
gset <- cbind(bs1, gs2)
gset$bcvals <- gset$b_value+gset$g_value
gset[gset$bcvals == 0, ]$bcvals <- 0.001
gset[gset$bcvals == 1, ]$bcvals <- 0.999
names(gset)[5] <- "fInt"
# Add a random effect
gset$reff <- paste(gset$b_initSite,
substr(gset$b_comparison, 1, 2), sep = "")
# Get rid of the I vs III comparison
gset <- gset[gset$b_comparison != "I vs III", ]
# BRAY_CURTIS DISSIMILARITY ----
# br <- betareg(bcvals~b_group*b_comparison, data=gset, link="logit")
br <- glmmTMB(bcvals ~ b_group*b_comparison, data = gset, family= beta_family(link = "logit"))
brrand <- glmmTMB(bcvals ~ b_group*b_comparison + (1|reff), data = gset, family= beta_family(link = "logit"))
brrandtest <- emmeans(brrand, pairwise ~ b_comparison | b_group)
# brtest <- emmeans(br, pairwise ~ b_comparison | b_group)
# Compare model withouth and with a random effect
AIC(br, brrand)
lrtest(br, brrand)
# Seems like trandom effect model fits data better
# Predict values for the plot
bcpred <- ggpredict(brrand, terms = c("b_group", "b_comparison"),
type = "re")
cfs <- as.data.frame(bcpred)
names(cfs) <- c("b_group",
"bcvals",
"SE",
"lcl",
"ucl",
"b_comparison")
gset$b_group <- recode(gset$b_group, Kleptoparasites = "Parasitic species")
cfs$b_group <- recode(cfs$b_group, Kleptoparasites = "Parasitic species")
bgcb <- ggplot(gset, aes(b_comparison, bcvals)) +
geom_jitter(width = 0.1,aes(color=b_group), alpha = 0.2)+
geom_line(aes(group = 1, color = b_group),
lty = c(2,2,1,1,1,1), data = cfs)+
geom_errorbar(aes(ymin = lcl, ymax = ucl, color = b_group),
data = cfs, width = 0, lwd=1) +
geom_point(data = cfs, size = 3, aes(color = b_group))+
facet_wrap(~b_group)+
scale_color_manual(values=c(colvec[1],
colvec[2],
colvec[3]))+
ylab("Bray-Curtis dissimilarity")+xlab("")
bgcb  + theme_bw()+theme(legend.position = "none")
# pdf("fig3b_bc.pdf", width=12, height=4)
# jpeg("fig3b_bc.jpg", width = 1200, height = 400, res = 150)
# pdf("revision_1/figures/Fig5.pdf", width=12, height=4,
#     onefile = FALSE)
# bgcb  + theme_bw()+theme(legend.position = "none")
# dev.off()
# GRADIENT COMPONENT----
# condition <- dset$diff == "Balanced"
# condition <- dset$diff == "Gradient"
# condition <- (dset$diff == "Balanced" & dset$comparison != "I vs III")
condition <- (dset$diff == "Gradient" & dset$comparison != "I vs III")
dset$reff <- paste(dset$initSite,
gsub(" ","",substr(dset$comparison,1,2)),
sep="_")
null_gra_rand <- glmmTMB(value ~ 1 + (1|reff),
data = dset[condition,],
family= beta_family(link = "logit"))
gra_rand <- glmmTMB(value ~ comparison*group + (1|reff),
data = dset[condition,],
family= beta_family(link = "logit"))
summary(gra_rand)
gra_rand_test <- emmeans(gra_rand, pairwise ~ comparison | group)
summary(gra_rand_test)
grapred <- ggpredict(gra_rand, terms = c("group", "comparison"),
type = "re")
cfs <- as.data.frame(grapred)
names(cfs) <- c("group",
"value",
"SE",
"lcl",
"ucl",
"comparison")
# gset$b_group <- recode(gset$b_group, Kleptoparasites = "Parasitic species")
# cfs$b_group <- recode(cfs$b_group, Kleptoparasites = "Parasitic species")
library(dplyr)
data_used <- dset[condition,]
data_used
data_used$group <- recode(data_used$group,
Kleptoparasites = "Parasitic species")
data_used
data_used$group
bgcb <- ggplot(dset[condition,], aes(comparison, value)) +
geom_jitter(width = 0.1,aes(color=group), alpha = 0.2)+
geom_line(aes(group = 1, color = group), lty = c(2,2,2,
2,2,2), data = cfs)+
geom_errorbar(aes(ymin = lcl, ymax = ucl, color = group),
data = cfs, width = 0, lwd=1) +
geom_point(data = cfs, size = 3, aes(color = group))+
facet_wrap(~group)+
scale_color_manual(values=c(alpha(colvec[1],1),
alpha(colvec[2],1),
alpha(colvec[3],1)))+
# ggtitle("Balanced component")
ylab("")+xlab("")+
ggtitle("Gradient component")
# pdf("fig3c_gradient.pdf", width=12, height=4)
# jpeg("fig3c_gradient.jpg", width = 1200, height = 400, res = 150)
pdf("revision_1/figures/FigA3.pdf", width=12, height=4,
onefile = FALSE)
bgcb  + theme_bw()+theme(legend.position = "none")
dev.off()
bgcb <- ggplot(data_used, aes(comparison, value)) +
geom_jitter(width = 0.1,aes(color=group), alpha = 0.2)+
geom_line(aes(group = 1, color = group), lty = c(2,2,2,
2,2,2), data = cfs)+
geom_errorbar(aes(ymin = lcl, ymax = ucl, color = group),
data = cfs, width = 0, lwd=1) +
geom_point(data = cfs, size = 3, aes(color = group))+
facet_wrap(~group)+
scale_color_manual(values=c(alpha(colvec[1],1),
alpha(colvec[2],1),
alpha(colvec[3],1)))+
# ggtitle("Balanced component")
ylab("")+xlab("")+
ggtitle("Gradient component")
# pdf("fig3c_gradient.pdf", width=12, height=4)
# jpeg("fig3c_gradient.jpg", width = 1200, height = 400, res = 150)
pdf("revision_1/figures/FigA3.pdf", width=12, height=4,
onefile = FALSE)
bgcb  + theme_bw()+theme(legend.position = "none")
dev.off()
gset$b_group <- recode(gset$b_group, Kleptoparasites = "Parasitic species")
cfs$b_group <- recode(cfs$b_group, Kleptoparasites = "Parasitic species")
cfs
cfs$group <- recode(cfs$b_group, Kleptoparasites = "Parasitic species")
cfs$group <- recode(cfs$group, Kleptoparasites = "Parasitic species")
data_used$group <- recode(data_used$group,
Kleptoparasites = "Parasitic species")
bgcb <- ggplot(data_used, aes(comparison, value)) +
geom_jitter(width = 0.1,aes(color=group), alpha = 0.2)+
geom_line(aes(group = 1, color = group), lty = c(2,2,2,
2,2,2), data = cfs)+
geom_errorbar(aes(ymin = lcl, ymax = ucl, color = group),
data = cfs, width = 0, lwd=1) +
geom_point(data = cfs, size = 3, aes(color = group))+
facet_wrap(~group)+
scale_color_manual(values=c(alpha(colvec[1],1),
alpha(colvec[2],1),
alpha(colvec[3],1)))+
# ggtitle("Balanced component")
ylab("")+xlab("")+
ggtitle("Gradient component")
# pdf("fig3c_gradient.pdf", width=12, height=4)
# jpeg("fig3c_gradient.jpg", width = 1200, height = 400, res = 150)
pdf("revision_1/figures/FigA3.pdf", width=12, height=4,
onefile = FALSE)
bgcb  + theme_bw()+theme(legend.position = "none")
dev.off()
# Source data processing script ----
source("data/data_processing.R")
# library(nlme)
library(MASS)
library(emmeans)
library(multcomp)
# General model
abund_gen <- glm.nb(abun~1+succession, data = desasc)
av <- anova(abund_gen, test = "Chisq")
anova(abund_gen, test = "F")
inter.test_gen <- emmeans(abund_gen, "succession")
phabu_gen <- cld(inter.test_gen, Letter="abcdefghijklm")
abund_int1 <- glm(abun~1+GS,
family = "poisson", data = desasc)
abund_int2 <- glm.nb(abun~1+GS, data = desasc)
abund_int3 <- glm(abun~1+GS, data = desasc)
# Select the best model
AIC(abund_int1, abund_int2,abund_int3)
# >>> Post-hoc ----
inter.test1 <- emmeans(abund_int2, "GS")
phabu <- cld(inter.test1, Letter="abcdefghijklm")
contrast(inter.test1, type = "response")
summary(abund_int1)
anova(abund_gen, test = "F")
av
anova(abund_gen, test = "F")
# 2. Diversity ----
# * SIMPSON ----
# >>> Analysis ----
simpson <- glm(simp~1+GS, data = desasc)
# * SHANNON ----
# >>> Analysis ----
sw <- glm(sw~1+GS, data = desasc)
sw_gen <- glm(sw~succession, data = desasc)
anova(sw_gen)
# >>> Post-hoc ----
inter.test2 <- emmeans(sw, "GS")
phsw <- cld(inter.test2, Letter="abcdefghijklm")
inter.test2_gen <- emmeans(sw_gen, "succession")
phsw_gen <- cld(inter.test2_gen, Letter="abcdefghijklm")
# 3. Richness ----
bg <- glm(rich~1+GS, data = desasc, family = "poisson")
bg_gen <- glm(rich~1+succession, data = desasc, family = "poisson")
summary(bg_gen)
# Select the best model
AIC(abund_int1, abund_int2,abund_int3)
# negative binomial model fits best
anova(abund_int2)
# negative binomial model fits best
anova(abund_int2, test = F)
# negative binomial model fits best
anova(abund_int2, test = "F")
# negative binomial model fits best
anova(abund_int2)
abund_int2
# negative binomial model fits best
summary(abund)
# negative binomial model fits best
summary(abund_int2)
anova(abund_int2)
