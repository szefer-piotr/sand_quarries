runs <- 100000
s1 <- sample(d1d2[,1], runs, replace = T)
s2 <- sample(d1d2[,2], runs, replace = T)
mc.p.value <- sum((s2-s1) < 0)/runs
mc.p.value
hist(s1/s2)
runs <- 1000000
s1 <- sample(d1d2[,1], runs, replace = T)
s2 <- sample(d1d2[,2], runs, replace = T)
mc.p.value <- sum((s2-s1) < 0)/runs
mc.p.value
hist(diff)
diff
#   stat_summary(fun.y=mean, geom="point",cex = 2) +
#   stat_summary(fun.y=mean, geom="line",lwd=1, lty=2)
#
# gof2sp[rownames(gof2sp) == nam]
# gof2si[1:10,]
#
#
#
# NOTES
# nam <- selected_gof[2]
nam < -"sph_fer"
dsts <- cbind(stages, ascnt[,colnames(ascnt) == nam])
colnames(dsts) <- c("site","succession",nam)
pt <- ggplot(dsts, aes(y = log(dsts[,3]+1),
x = as.factor(succession),
group = 1)) +
geom_jitter(width=0.1)+
stat_summary(fun.data=mean_cl_boot,
geom="pointrange", lwd=0.8)# +
pt + stat_summary(fun.y=mean, geom="point",cex = 2)
#   stat_summary(fun.y=mean, geom="point",cex = 2) +
#   stat_summary(fun.y=mean, geom="line",lwd=1, lty=2)
#
# gof2sp[rownames(gof2sp) == nam]
# gof2si[1:10,]
#
#
#
# NOTES
# nam <- selected_gof[2]
nam < -"tet_sal"
dsts <- cbind(stages, ascnt[,colnames(ascnt) == nam])
colnames(dsts) <- c("site","succession",nam)
pt <- ggplot(dsts, aes(y = log(dsts[,3]+1),
x = as.factor(succession),
group = 1)) +
geom_jitter(width=0.1)+
stat_summary(fun.data=mean_cl_boot,
geom="pointrange", lwd=0.8)# +
pt + stat_summary(fun.y=mean, geom="point",cex = 2)
#   stat_summary(fun.y=mean, geom="point",cex = 2) +
#   stat_summary(fun.y=mean, geom="line",lwd=1, lty=2)
#
# gof2sp[rownames(gof2sp) == nam]
# gof2si[1:10,]
#
#
#
# NOTES
# nam <- selected_gof[2]
nam < -"tet_sal"
dsts <- cbind(stages, ascnt[,colnames(ascnt) == nam])
colnames(dsts) <- c("site","succession",nam)
pt <- ggplot(dsts, aes(y = log(dsts[,3]+1),
x = as.factor(succession),
group = 1)) +
geom_jitter(width=0.1)+
stat_summary(fun.data=mean_cl_boot,
geom="pointrange", lwd=0.8)# +
pt + stat_summary(fun.y=mean, geom="point",cex = 2)
#   stat_summary(fun.y=mean, geom="point",cex = 2) +
#   stat_summary(fun.y=mean, geom="line",lwd=1, lty=2)
#
# gof2sp[rownames(gof2sp) == nam]
# gof2si[1:10,]
#
#
#
# NOTES
# nam <- selected_gof[2]
nam < -"tet_sal"
dsts <- cbind(stages, ascnt[,colnames(ascnt) == nam])
dsts
ascnt[,colnames(ascnt) == nam]
nam
#   stat_summary(fun.y=mean, geom="point",cex = 2) +
#   stat_summary(fun.y=mean, geom="line",lwd=1, lty=2)
#
# gof2sp[rownames(gof2sp) == nam]
# gof2si[1:10,]
#
#
#
# NOTES
# nam <- selected_gof[2]
nam < -"tet_sal"
#   stat_summary(fun.y=mean, geom="point",cex = 2) +
#   stat_summary(fun.y=mean, geom="line",lwd=1, lty=2)
#
# gof2sp[rownames(gof2sp) == nam]
# gof2si[1:10,]
#
#
#
# NOTES
# nam <- selected_gof[2]
nam <- "tet_sal"
dsts <- cbind(stages, ascnt[,colnames(ascnt) == nam])
colnames(dsts) <- c("site","succession",nam)
pt <- ggplot(dsts, aes(y = log(dsts[,3]+1),
x = as.factor(succession),
group = 1)) +
geom_jitter(width=0.1)+
stat_summary(fun.data=mean_cl_boot,
geom="pointrange", lwd=0.8)# +
pt + stat_summary(fun.y=mean, geom="point",cex = 2)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
options(knitr.table.format = "html")
selected_gof
# Load data ----
source("data/data_processing.R")
library(betapart)
require(vegan)
library(ggplot2)
library(codyn)
api1 <- api[stages$succession == 1, ]
api2 <- api[stages$succession == 2, ]
api3 <- api[stages$succession == 3, ]
sph1 <- sph[stages$succession == 1, ]
sph2 <- sph[stages$succession == 2, ]
sph3 <- sph[stages$succession == 3, ]
chr1 <- chr[stages$succession == 1, ]
chr2 <- chr[stages$succession == 2, ]
chr3 <- chr[stages$succession == 3, ]
randompairs <- function(reps, ind1, ind2){
chain1 <- sample(1:ind1, reps, replace = TRUE)
chain2 <- sample(1:ind2, reps, replace = TRUE)
return(data.frame(chain1,chain2))
}
get_indices <- function(mat1, mat2){
mat <- matrix(1, nrow = dim(mat1)[1], ncol=dim(mat2)[1])
mat <- lower.tri(mat)
return(which(mat, arr.ind = T))
}
compute_pairs <- function(api1, api2, reps=999,
plt = 2, ...){
# Get only unique set of pairs
indices <- get_indices(api1,api2)
result <- data.frame()
for(pair in 1:dim(indices)[1]){
bpa <- beta.pair.abund(rbind(api1[indices[pair,1],],
api2[indices[pair,2],]))
result <- rbind(result,
c(bpa$beta.bray.bal,
bpa$beta.bray.gra,
bpa$beta.bray))
}
colnames(result) <- c("Balanced", "Gradient", "Bray")
return(result)
# plot(density(result[,plt], adjust = 1, kernel = "gaussian"),
#      xlim = c(0,  0.9), ylim = c(0,5),
#      xlab = "",ylab = "",main="",...)
}
a12 <- compute_pairs(api1,api2)
a13 <- compute_pairs(api1,api3)
s12 <- compute_pairs(sph1, sph2)
s13 <- compute_pairs(sph1, sph3)
c12 <- compute_pairs(chr1, chr2)
c13 <- compute_pairs(chr1, chr3)
dset <- data.frame(value = c(a12$Balanced,
a13$Balanced,
a12$Gradient,
a13$Gradient,
s12$Balanced,
s13$Balanced,
s12$Gradient,
s13$Gradient,
c12$Balanced,
c13$Balanced,
c12$Gradient,
c13$Gradient),
type = rep(c("Balanced I  vs II", "Balanced I vs III",
"Gradient I vs II", "Gradient I vs III",
"Balanced I  vs II", "Balanced I vs III",
"Gradient I vs II", "Gradient I vs III",
"Balanced I  vs II", "Balanced I vs III",
"Gradient I vs II", "Gradient I vs III"),
c(dim(a12)[1],dim(a13)[1],
dim(a12)[1],dim(a13)[1],
dim(s12)[1],dim(s13)[1],
dim(s12)[1],dim(s13)[1],
dim(c12)[1],dim(c13)[1],
dim(c12)[1],dim(c13)[1])),
comparison = rep(c("I vs II", "I vs III",
"I vs II", "I vs III",
"I vs II", "I vs III",
"I vs II", "I vs III",
"I vs II", "I vs III",
"I vs II", "I vs III"),
c(dim(a12)[1],dim(a13)[1],
dim(a12)[1],dim(a13)[1],
dim(s12)[1],dim(s13)[1],
dim(s12)[1],dim(s13)[1],
dim(c12)[1],dim(c13)[1],
dim(c12)[1],dim(c13)[1])),
group = rep(c("Apoidae", "Spheciformes", "Chrysididae"),
c(dim(a12)[1]+dim(a13)[1]+dim(a12)[1]+dim(a13)[1],
dim(s12)[1]+dim(s13)[1]+dim(s12)[1]+dim(s13)[1],
dim(c12)[1]+dim(c13)[1]+dim(c12)[1]+dim(c13)[1])))
plotapi <- ggplot(dset, aes(y=log(value/(1-value)), x = type,color = type)) +
geom_jitter(width = 0.2) +
facet_wrap(~group, scales = "free")
plotapi <- ggplot(dset, aes(log(value/(1-value)), color = type)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free")
# Pairwise cumulative
ba12 <- beta.pair.abund(rbind(colSums(api1),colSums(api2)))
ba13 <- beta.pair.abund(rbind(colSums(api1),colSums(api3)))
ba23 <- beta.pair.abund(rbind(colSums(api2),colSums(api3)))
bs12 <- beta.pair.abund(rbind(colSums(sph1),colSums(sph2)))
bs13 <- beta.pair.abund(rbind(colSums(sph1),colSums(sph3)))
bs23 <- beta.pair.abund(rbind(colSums(sph2),colSums(sph3)))
bc12 <- beta.pair.abund(rbind(colSums(chr1),colSums(chr2)))
bc13 <- beta.pair.abund(rbind(colSums(chr1),colSums(chr3)))
bc23 <- beta.pair.abund(rbind(colSums(chr2),colSums(chr3)))
pwcomp <- data.frame(val = as.numeric(c(ba12,ba13,ba23,
bs12,bs13,bs23,
bc12,bc13,bc23)),
comp = rep(c("Stage I vs II",
"Stage I vs III",
"Stage II vs III",
"Stage I vs II",
"Stage I vs III",
"Stage II vs III",
"Stage I vs II",
"Stage I vs III",
"Stage II vs III"),each=3),
group = rep(c("Apoidae",
"Spheciformes",
"Chrysididae"),
c(9,9,9)),
beta = rep(c("Balanced",
"Gradient",
"Bray-Curtis"),9))
pwcomp$comp <- as.character(pwcomp$comp)
pwcomp$beta <- factor(pwcomp$beta,levels=c("Balanced",
"Gradient",
"Bray-Curtis"))
pwplot <- ggplot(pwcomp, aes(fill=beta, y=val, x=comp)) +
geom_bar(position="dodge", stat="identity") +
ylim(c(0,0.65)) +
xlab("")+ylab("")+
scale_fill_manual(values=c(colvec[1],
colvec[2],
colvec[3])) +
facet_wrap(~group,
drop = T,
scales = "free") + theme_bw()
plotapi
plotapi <- ggplot(dset, aes(y=value, x = type,color = type)) +
geom_jitter(width = 0.2) +
facet_wrap(~group, scales = "free")
plotapi
plotapi <- ggplot(dset, aes(log(value/(1-value)), color = type)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free")
plotapi
plotapi <- ggplot(dset, aes(value, color = type)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free")
plotapi
# individual group
apibal <- dset[dset$group == "Apoidae",]
apibal <- apibal[grep("Gradient", dset$type),]
apibal
apibal <- apibal[complete.cases(apibal),]
apibal
dist1 <- apibal[apibal$comparison == "I vs II",]
dist1
dist2 <- apibal[apibal$comparison == "I vs III",]
dist2
dist1
# KS test
ks.test(dist1$value,dist2$value)
# KS test
ks.test(dist1$value,dist2$value, alternative = "less")
# KS test
ks.test(dist2$value,dist1$value, alternative = "less")
# KS test
ks.test(dist1$value,dist2$value, alternative = "less")
# KS test
ks.test(dist1$value,dist2$value)
apibal <- dset[dset$group == "Apoidae",]
apibal <- apibal[grep("Balanced", dset$type),]
apibal <- apibal[complete.cases(apibal),]
dist1 <- apibal[apibal$comparison == "I vs II",]
dist2 <- apibal[apibal$comparison == "I vs III",]
dist1
dist2
# KS test
ks.test(dist1$value,dist2$value)
dist1
dist1$value
dist2$value
dist1$value
dist2$value
dist1$value - dist2$value
rank(dist1$value - dist2$value)
rank(sort(dist1$value) - sort(dist2$value))
plotapi <- ggplot(dset, aes(value, color = type)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[2],
colvec[3]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[2],
colvec[3],
colvec[4]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[5],
colvec[5]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[6],
colvec[6]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[6],
colvec[2],
colvec[2]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi <- ggplot(dset, aes(value, color = type)) +
geom_density(adjust=5, lty=c(1,2,1,2)) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type, linetype=comp)) +
geom_density(adjust=5, lty=c(1,2,1,2)) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type, linetype=comp)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi
dset
plotapi <- ggplot(dset, aes(value, color = type,
linetype=comparison)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type,
linetype=comparison)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_classic() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type,
linetype=comparison)) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
xlim(c(0,1)) +
theme_classic() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi
?geom_density
plotapi <- ggplot(dset, aes(value, color = type,
linetype=comparison)) +
geom_density(aes(y = ..scaled..), adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
xlim(c(0,1)) +
theme_classic() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type,
linetype=comparison)) +
geom_density(aes(y = ..scaled..), adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
xlim(c(0,1)) +
theme_classic() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi <- ggplot(dset, aes(value, color = type,
linetype=comparison)) +
# geom_density(aes(y = ..scaled..), adjust=5) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
xlim(c(0,1)) +
theme_classic() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
plotapi
plotapi <- ggplot(dset, aes(value, color = type,
linetype=comparison)) +
# geom_density(aes(y = ..scaled..), adjust=5) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
theme_classic() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
# Pairwise cumulative
ba12 <- beta.pair.abund(rbind(colSums(api1),colSums(api2)))
plotapi
plotapi <- ggplot(dset, aes(value, color = type,
linetype=comparison)) +
# geom_density(aes(y = ..scaled..), adjust=5) +
geom_density(adjust=5) +
facet_wrap(~group, scales = "free") +
xlab("") + ylab("") +
xlim(c(0,1))+
theme_classic() +
scale_color_manual(values=c(colvec[1],
colvec[1],
colvec[2],
colvec[2]))
# Pairwise cumulative
ba12 <- beta.pair.abund(rbind(colSums(api1),colSums(api2)))
plotapi
pwplot
