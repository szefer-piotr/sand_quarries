desasc$s3 <- as.numeric(desasc$succession == 3)
desasc$GS <- interaction(desasc$succession, desasc$group)
s1 <- stages$succession == 1
s2 <- stages$succession == 2
s3 <- stages$succession == 3
stage1 <- list("Herbivores" = as.numeric(sort(colSums(api[s1,]),
decreasing = T)),
"Predators" = as.numeric(sort(colSums(sph[s1,]),
decreasing = T)),
"Kleptoparasites" = as.numeric(sort(colSums(chr[s1,]),
decreasing = T)))
rac_df <- expand.grid(stage = c("Stage I", "Stage II", "Stage III"),
group = unique(groups))
rac_mxa <- rbind(
# Apiformes
colSums(api[stages$succession == 1, ]),
colSums(api[stages$succession == 2, ]),
colSums(api[stages$succession == 3, ])
)
rac_mxs <- rbind(
# Spheciformes
colSums(sph[stages$succession == 1, ]),
colSums(sph[stages$succession == 2, ]),
colSums(sph[stages$succession == 3, ])
)
rac_mxc <- rbind(
# Chrysididae
colSums(chr[stages$succession == 1, ]),
colSums(chr[stages$succession == 2, ]),
colSums(chr[stages$succession == 3, ])
)
rac_mx <- cbind(rac_mxa,
rac_mxs,
rac_mxc)
dfa <- data.frame(group = rep("Herbivores", dim(api)[2]),
stage = rep(c("SI","SII","SIII"),
each=dim(api)[2]))
t1 <- rac_mxa[1,]
t2 <- rac_mxa[2,]
t3 <- rac_mxa[3,]
dfa <- cbind(dfa, abund = c(t1,t2,t3))
dfa$spec <- c(names(t1),names(t2),names(t3))
dfa
# Source data processing script ----
source("data/data_processing.R")
library(nlme)
library(MASS)
library(emmeans)
library(multcomp)
# General model
abund_gen <- glm.nb(abun~1+succession, data = desasc)
inter.test_gen <- emmeans(abund_gen, "succession")
phabu_gen <- cld(inter.test_gen, Letter="abcdefghijklm")
abund_int1 <- glm(abun~1+GS,
family = "poisson", data = desasc)
abund_int2 <- glm.nb(abun~1+GS, data = desasc)
abund_int3 <- glm(abun~1+GS, data = desasc)
# Select the best model
AIC(abund_int1, abund_int2,abund_int3)
# >>> Post-hoc ----
inter.test1 <- emmeans(abund_int2, "GS")
phabu <- cld(inter.test1, Letter="abcdefghijklm")
phabu
# 2. Diversity ----
# * SIMPSON ----
# >>> Analysis ----
simpson <- glm(simp~1+GS, data = desasc)
# * SHANNON ----
# >>> Analysis ----
sw <- glm(sw~1+GS, data = desasc)
sw_gen <- glm(sw~succession, data = desasc)
# >>> Post-hoc ----
inter.test2 <- emmeans(sw, "GS")
phsw <- cld(inter.test2, Letter="abcdefghijklm")
inter.test2_gen <- emmeans(sw_gen, "succession")
phsw_gen <- cld(inter.test2_gen, Letter="abcdefghijklm")
# 3. Richness ----
bg <- glm(rich~1+GS, data = desasc, family = "poisson")
bg_gen <- glm(rich~1+succession, data = desasc, family = "poisson")
# >>> Post-hoc ----
inter.test3 <- emmeans(bg, "GS")
phrich <- cld(inter.test3, Letter="abcdefghijklm")
inter.test3_gen <- emmeans(bg_gen, "succession")
phrich_gen <- cld(inter.test3_gen, Letter="abcdefghijklm")
# Facet plot ----
facet_dat <-data.frame(
val = c(log(desasc$abun+1),
desasc$rich,
desasc$sw),
group = rep(desasc$group,3),
stage = rep(desasc$succession, 3),
type = rep(c("No. of individuals",
"Richness",
"Diversity"), each=96)
)
facet_dat$fsucc <- 0
facet_dat[facet_dat$stage == 1,]$fsucc <- "Stage I"
facet_dat[facet_dat$stage == 2,]$fsucc <- "Stage II"
facet_dat[facet_dat$stage == 3,]$fsucc <- "Stage III"
facet_dat$int <- as.character(desasc$GS)
facet_dat$type <- as.character(facet_dat$type)
facet_dat$post_hoc <- "x"
# Generate labels
# For "No. of individuals"
abugroups <- data.frame(int = phabu$GS,
gr = gsub(" ", "", phabu$.group))
abugroups$gr <- as.character(abugroups$gr)
for (itr in abugroups$int){
indices <- (facet_dat$type == "No. of individuals" & facet_dat$int == itr)
facet_dat[indices,]$post_hoc <- abugroups[abugroups$int == itr,]$gr
}
# For "Diversity"
divgroups <- data.frame(int = phsw$GS,
gr = gsub(" ", "", phsw$.group))
divgroups$gr <- as.character(divgroups$gr)
for (itr in divgroups$int){
indices <- (facet_dat$type == "Diversity" & facet_dat$int == itr)
facet_dat[indices,]$post_hoc <- divgroups[divgroups$int == itr,]$gr
}
# For "Richness"
richgroups <- data.frame(int = phrich$GS,
gr = gsub(" ", "", phrich$.group))
richgroups$gr <- as.character(richgroups$gr)
for (itr in richgroups$int){
indices <- (facet_dat$type == "Richness" & facet_dat$int == itr)
facet_dat[indices,]$post_hoc <- richgroups[richgroups$int == itr,]$gr
}
fpl <- ggplot(facet_dat, aes(x = fsucc, y = val,
col = group,
group = group,
label = post_hoc))
fullflp <- fpl + geom_jitter(width=0.1, alpha=0.3, cex=2) +
facet_wrap(~type, scales = "free") +
stat_summary(fun.data=mean_cl_boot,
geom="pointrange", lwd=0.8) +
stat_summary(fun.y=mean, geom="point",cex = 2) +
stat_summary(fun.y=mean, geom="line",lwd=1, lty=2)+
stat_summary(fun.y=mean, geom="text",
col = rgb(10,10,10,180,maxColorValue = 255),
hjust = 1.2,
vjust = -1.5) +
theme() +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[2],
colvec[3]))
fullflp <- fpl + geom_jitter(width=0.1, alpha=0.3, cex=2) +
facet_wrap(~type, scales = "free") +
stat_summary(fun.data=mean_cl_boot,
geom="pointrange", lwd=0.8) +
stat_summary(fun=mean, geom="point",cex = 2) +
stat_summary(fun=mean, geom="line",lwd=1, lty=2)+
stat_summary(fun=mean, geom="text",
col = rgb(10,10,10,180,maxColorValue = 255),
hjust = 1.2,
vjust = -1.5) +
theme() +
xlab("") + ylab("") +
theme_bw() +
scale_color_manual(values=c(colvec[1],
colvec[2],
colvec[3]))
# Table 1 - results from mixed effect models
summary(abund_int2)
summary(sw)
summary(bg)
phrich
phsw
phabu
# Predict abundance
abund_int2
py1 <- data.frame(GS = unique(desasc$GS))
p1  <- predict(abund_int2, newdata=py1, se.fit=TRUE, type='response')
py1 <- data.frame(py1, p1)
py2 <- data.frame(GS = unique(desasc$GS))
p2  <- predict(sw, newdata=py2, se.fit=TRUE, type='response')
py2 <- data.frame(py2, p2)
py3 <- data.frame(GS = unique(desasc$GS))
p3  <- predict(bg, newdata=py3, se.fit=TRUE, type='response')
py3 <- data.frame(py3, p3)
fullflp
# Source data processing script ----
source("data/data_processing.R")
library(vegan)
# Transformation
ascnt <- asc
asc <- decostand(asc, "hel")
# 1. RDA ordination ----
rda1 <- rda(asc~as.factor(succession), data=stages)
rdaa <- rda(asc[,groups=="Apiformes"]~as.factor(succession), data=stages)
rdaa <- rda(asc[,groups=="Herbivores"]~as.factor(succession), data=stages)
rdas <- rda(asc[,groups=="Predators"]~as.factor(succession), data=stages)
rdac <- rda(asc[,groups=="Cleptoparasites"]~as.factor(succession), data=stages)
rdac <- rda(asc[,groups=="Kleptoparasites"]~as.factor(succession), data=stages)
# m <- cca1
m <- rda1
#>>> Statistical test ----
anova(m, by="terms", permutations = 999)
anova(m, by="axis", permutations = 999)
# >>> R2 -----
coef(m)
R2 <- RsquareAdj(m)$r.squared
R2
# 2. Variance explained -----
sumeig <- summary(eigenvals(m))
sumeig[2,1]
sumeig[2,2]
# GOF - total inertia explained for given number of axes
gof <- "goodness"(m, display = "species",
statistic = "explained",
model="CCA",
summarize = FALSE)
# Fit species onto ordination
spc <- envfit(m, asc)
write.table(cbind(rownames(spc$vectors),
spc$vectors$arrows,
spc$vectors$r,
spc$vectors$pvals), "envfit.txt")
selected_gof <- names(spc$vectors$pvals)[which(spc$vectors$pvals <= 0.05)]
gof2sp <- inertcomp(rda1, display = "species", proportional = F)
gof2si <- inertcomp(rda1, display = "sites", proportional = T)
# withouth selection
as.factor(groups)
names(summary(rda1))
which(colnames(asc) == rownames(summary(rda1)$species))
make_rda_plot <- function(m, scl=3, type = "Apiformes", color){
plot(m, type = "n", scaling = scl,
xlab = paste("RDA1 [",
round(sumeig[2,1]*100,2),
"%]",
sep=""),
ylab = paste("RDA2 [",
round(sumeig[2,2]*100,2),
"%]",
sep=""),
cex.lab = 1.5)
points(m, display = "species",
col = colvec[color],
scaling = scl, pch=19, cex = 1.5,
select = colnames(asc[groups == type]))
points(m, display="cn", scaling = scl,
col = "red",
pch = 25)
text(m, display="cn", scaling = scl,
labels = c("Early",
"Mid",
"Late"),
col = "red", lwd=1.5,
pos = 3)
grnames <- colnames(asc[,groups == type])
lgn <- length(selected_gof[selected_gof %in% grnames])
if(lgn != 0){
text(m, display="species", scaling=scl,
select = selected_gof[selected_gof %in% grnames],
col=cgray)
}
}
# 4. NMDS ----
library(ggplot2)
library(RColorBrewer)
cols <- brewer.pal(3, "Set1")
fGroups <- as.numeric(as.factor(groups))
par(mfrow=c(1,1))
nmds <-metaMDS(asc)
#>>>Plot ----
par(mfrow=c(1,1))
x11(10,10)
plot(m, type = "n", scaling = scl,
xlab = paste("RDA1 [",
round(sumeig[2,1]*100,2),
"%]",
sep=""),
ylab = paste("RDA2 [",
round(sumeig[2,2]*100,2),
"%]",
sep=""),
cex.lab = 1.5)
par(mfrow = c(1,3))
make_rda_plot(m, 3, "Apiformes", 1)
make_rda_plot(m, 3, "Spheciformes", 3)
make_rda_plot(m, 3, "Chrysididae", 2)
make_rda_plot(m, 3, "Herbivores", 1)
make_rda_plot(m, 3, "Predators", 3)
make_rda_plot(m, 3, "KLeptoparasites", 2)
make_rda_plot(m, 3, "Herbivores", 1)
make_rda_plot(m, 3, "Predators", 3)
make_rda_plot(m, 3, "Kleptoparasites", 2)
# Load data ----
source("data/data_processing.R")
library(betapart)
require(vegan)
library(ggplot2)
library(codyn)
# Make pairs and calcualte beta.pair.abund and beta.pair
api1 <- decostand(api[stages$succession == 1, ], "hel")
api2 <- decostand(api[stages$succession == 2, ], "hel")
api3 <- decostand(api[stages$succession == 3, ], "hel")
sph1 <- decostand(sph[stages$succession == 1, ], "hel")
sph2 <- decostand(sph[stages$succession == 2, ], "hel")
sph3 <- decostand(sph[stages$succession == 3, ], "hel")
chr1 <- decostand(chr[stages$succession == 1, ], "hel")
chr2 <- decostand(chr[stages$succession == 2, ], "hel")
chr3 <- decostand(chr[stages$succession == 3, ], "hel")
randompairs <- function(reps, ind1, ind2){
chain1 <- sample(1:ind1, reps, replace = TRUE)
chain2 <- sample(1:ind2, reps, replace = TRUE)
return(data.frame(chain1,chain2))
}
# Returns indices of unique site combination
get_indices <- function(mat1, mat2){
mat <- matrix(1, nrow = dim(mat1)[1], ncol=dim(mat2)[1])
mat <- lower.tri(mat)
return(which(mat, arr.ind = T))
}
# Main function
compute_pairs <- function(api1, api2, reps=999,
plt = 2, ...){
# Get only unique set of pairs
indices <- get_indices(api1,api2)
result <- data.frame()
for(pair in 1:dim(indices)[1]){
bpa <- beta.pair.abund(rbind(api1[indices[pair,1],],
api2[indices[pair,2],]))
result <- rbind(result,
c(bpa$beta.bray.bal,
bpa$beta.bray.gra,
bpa$beta.bray))
}
colnames(result) <- c("Balanced", "Gradient", "Bray")
return(result)
# plot(density(result[,plt], adjust = 1, kernel = "gaussian"),
#      xlim = c(0,  0.9), ylim = c(0,5),
#      xlab = "",ylab = "",main="",...)
}
a12 <- compute_pairs(api1,api2)
a13 <- compute_pairs(api1,api3)
a23 <- compute_pairs(api2,api3)
s12 <- compute_pairs(sph1, sph2)
s13 <- compute_pairs(sph1, sph3)
s23 <- compute_pairs(sph2, sph3)
c12 <- compute_pairs(chr1, chr2)
c13 <- compute_pairs(chr1, chr3)
c23 <- compute_pairs(chr2, chr3)
dset <- data.frame(value = c(a12$Balanced,
a13$Balanced,
a23$Balanced,
a12$Gradient,
a13$Gradient,
a23$Gradient,
s12$Balanced,
s13$Balanced,
s23$Balanced,
s12$Gradient,
s13$Gradient,
s23$Gradient,
c12$Balanced,
c13$Balanced,
c23$Balanced,
c12$Gradient,
c13$Gradient,
c23$Balanced),
type = rep(c("Balanced I  vs II", "Balanced I vs III",
"Balanced II vs III",
"Gradient I vs II", "Gradient I vs III",
"Gradient II vs III",
"Balanced I  vs II", "Balanced I vs III",
"Balanced II vs III",
"Gradient I vs II", "Gradient I vs III",
"Gradient II vs III",
"Balanced I  vs II", "Balanced I vs III",
"Balanced II vs III",
"Gradient I vs II", "Gradient I vs III",
"Gradient II vs III"),
c(dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1])),
comparison = rep(c("I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III"),
c(dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1])),
group = rep(c("Apoidae", "Spheciformes", "Chrysididae"),
c(2*dim(a12)[1]+2*dim(a13)[1]+2*dim(a23)[1],
2*dim(s12)[1]+2*dim(s13)[1]+2*dim(s23)[1],
2*dim(c12)[1]+2*dim(c13)[1]+2*dim(c23)[1])))
dset <- data.frame(value = c(a12$Balanced,
a13$Balanced,
a23$Balanced,
a12$Gradient,
a13$Gradient,
a23$Gradient,
s12$Balanced,
s13$Balanced,
s23$Balanced,
s12$Gradient,
s13$Gradient,
s23$Gradient,
c12$Balanced,
c13$Balanced,
c23$Balanced,
c12$Gradient,
c13$Gradient,
c23$Balanced),
type = rep(c("Balanced I  vs II", "Balanced I vs III",
"Balanced II vs III",
"Gradient I vs II", "Gradient I vs III",
"Gradient II vs III",
"Balanced I  vs II", "Balanced I vs III",
"Balanced II vs III",
"Gradient I vs II", "Gradient I vs III",
"Gradient II vs III",
"Balanced I  vs II", "Balanced I vs III",
"Balanced II vs III",
"Gradient I vs II", "Gradient I vs III",
"Gradient II vs III"),
c(dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1])),
comparison = rep(c("I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III",
"I vs II", "I vs III","II vs III"),
c(dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(a12)[1],dim(a13)[1],dim(a23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(s12)[1],dim(s13)[1],dim(s23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1],
dim(c12)[1],dim(c13)[1],dim(c23)[1])),
group = rep(c("Herbivores", "Predators", "Kleptoparasites"),
c(2*dim(a12)[1]+2*dim(a13)[1]+2*dim(a23)[1],
2*dim(s12)[1]+2*dim(s13)[1]+2*dim(s23)[1],
2*dim(c12)[1]+2*dim(c13)[1]+2*dim(c23)[1])))
plotapi <- ggplot(dset, aes(y=log(value/(1-value)), x = type,color = type)) +
geom_jitter(width = 0.2) +
facet_wrap(~group, scales = "free")
plotapi
#PLOT ----
dset$diff <- substr(dset$type,1,8)
plotapi <- ggplot(dset, aes(value, color = type,
fill = type,
linetype=comparison)) +
# geom_density(aes(y = ..scaled..), adjust=5) +
geom_density(adjust=5) +
facet_wrap(~group*diff, scales = "free") +
xlab("") + ylab("") +
xlim(c(0,1))+
theme_classic() +
scale_color_manual(values=c(colvec[1],
colvec[2],
colvec[5],
colvec[1],
colvec[2],
colvec[5])) +
scale_fill_manual(values = alpha(c(colvec[1],
colvec[2],
colvec[5],
colvec[1],
colvec[2],
colvec[5]),0.2))
plotapi
# TESTS ----
logit <-function(x){log(x/(1-x))}
LMA <- lm(logit(value)~type, data = dset[dset$group == "Apoidae", ])
LMA <- lm(logit(value)~type, data = dset[dset$group == "Herbivores", ])
LMS <- lm(logit(value)~type, data = dset[dset$group == "Predators", ])
LMS <- lm(logit(value)~type, data = dset[dset$group == "Kleptoparasites", ])
library("PMCMR")
library(emmeans)
library(multcomp)
kruskal.test(logit(value)~type,
data = dset[dset$group == "Apoidae", ])
kruskal.test(logit(value)~type,
data = dset[dset$group == "Herbivores", ])
phA <- posthoc.kruskal.nemenyi.test(x = dset[dset$group == "Herbivores", ]$value,
g = dset[dset$group == "Herbivores", ]$type,
dist="Chisquare")
phA
kruskal.test(value~type,
data = dset[dset$group == "Predators", ])
phS <- posthoc.kruskal.nemenyi.test(x = dset[dset$group == "Predators", ]$value,
g = dset[dset$group == "Predators", ]$type,
dist="Chisquare")
phS
kruskal.test(value~type,
data = dset[dset$group == "Kleptoparasites", ])
phC <- posthoc.kruskal.nemenyi.test(x = dset[dset$group == "Kleptoparasites", ]$value,
g = dset[dset$group == "Kleptoparasites", ]$type,
dist="Chisquare")
write.table(phA$p.value, "phA.txt")
write.table(phS$p.value,"phS.txt")
phC
plotapi
plotapi <- ggplot(dset, aes(y=log(value/(1-value)), x = type,color = type)) +
geom_jitter(width = 0.2) +
facet_wrap(~group, scales = "free")
plotapi
